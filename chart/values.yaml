replicaCount: 1

image:
  repository: atinoda/text-generation-webui
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: default-nvidia

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

service:
  type: ClusterIP
  apiPort: 5000
  httpPort: 7860

ingress:
  enabled: false
  className: ""
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example-ui.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          portName: http
    - host: chart-example-api.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          portName: api
  tls: []
   # - secretName: chart-example-tls
   #   hosts:
   #     - chart-example-ui.local
   #     - chart-example-api.local

resources: {}
  # limits:
  #   nvidia.com/gpu: 1

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"

nodeSelector: {}

tolerations: []

affinity: {}
